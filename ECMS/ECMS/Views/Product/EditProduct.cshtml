
@{
    ViewData["Title"] = "EditProduct";
    Layout = "~/Views/Shared/_LayoutForECMS.cshtml";
}
<br />
<br />
<br />
<br />

<div class="card mt-0 shadow-lg p-3 bg-white rounded" style="width: 50%; margin: 0 auto;">
    <div class="form-group">
        <label for="Name" class="control-label">Name</label>
        <input id="Name" name="Name" class="form-control" value="@ViewBag.ProductName" />
    </div>
    <div class="form-group">
        <label for="Description" class="control-label">Description</label>
        <textarea id="Description" name="Description" class="form-control">@ViewBag.ProductDescription</textarea>
    </div>
    <div class="form-group">
        <label for="Specification" class="control-label">Specification</label>
        <textarea id="Specification" name="Specification" class="form-control">@ViewBag.ProductSpecification</textarea>
    </div>
    <div class="form-group">
        <label for="Price" class="control-label">Price</label>
        <input id="Price" name="Price" class="form-control" value="@ViewBag.ProductPrice" />
    </div>
    <div class="form-group">
        <label for="Category" class="control-label">Category</label>
        @Html.DropDownList("Category", (SelectList)ViewBag.CategoryList, "Select Category", new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label for="Size" class="control-label">Size</label>
        @Html.DropDownList("Size", (SelectList)ViewBag.SizeList, "Select Size", new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label for="InventoryLevel" class="control-label">Inventory Level</label>
        @Html.DropDownList("InventoryLevel", (SelectList)ViewBag.InventoryLevelList, "Select Inventory Level", new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label for="Color" class="control-label">Color</label>
        @Html.DropDownList("Color", (SelectList)ViewBag.ColorList, "Select Color", new { @class = "form-control" })
    </div>
    <div class="form-group">
        <label for="qty" class="control-label">Qty</label>
        <input id="qty" name="qty" class="form-control" type="number" value="@ViewBag.Quantity" />
    </div>
    <div class="form-group" style="text-align: center;">
        <button id="UpdateButton" class="btn btn-primary ">Update</button>
    </div>
   
</div>
<br />
<br />
<br />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        debugger;
        var pId = @ViewBag.ProductId;
        var category = $('#Category').val();
        var size = $('#Size').val();
        var color = $('#Color').val();
        var inventoryLevel = $('#InventoryLevel').val();
        $('#UpdateButton').click(function () {
            debugger;
            var formData = {
                Id: pId,
                Name: $('#Name').val(),
                Description: $('#Description').val(),
                Specification: $('#Specification').val(),
                Price: parseFloat($('#Price').val()), 
                Category: parseInt($('#Category').val()), 
                Size: parseInt($('#Size').val()),
                InventoryLevel: parseInt($('#InventoryLevel').val()), 
                Qty: parseInt($('#Qty').val()), 
                Color: parseInt($('#Color').val()) 
            };

            $.ajax({
                type: 'PUT',
                url: '/Product/Edit',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (data) {
                    Swal.fire({
                        title: 'Success',
                        text: 'Product Updated Successfully',
                        icon: 'success',
                        showConfirmButton: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '@Url.Action("ProductList", "Product")';
                        }
                    });
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        title: 'Error!',
                        text: "There is an error",
                        icon: 'error',
                        showConfirmButton: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.reload();
                        }
                    });
                }
            });
        });
    });
</script>
